# -*- coding: utf-8 -*-
"""streamlit_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19nMaMcEB_reDcJ7mTqMAK2z18n8DdIEB
"""

import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Streamlit app title
st.title("Crime Data Analysis Dashboard")

# File uploader
uploaded_file = st.file_uploader("Upload CSV file", type=["csv"])
if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    st.write("### Data Preview")
    st.dataframe(df.head())

    # Histogram for Age distributions
    st.subheader("Age Distribution")
    fig, ax = plt.subplots(figsize=(10, 5))
    sns.histplot(df['Offender_Age'], bins=30, kde=True, color='blue', label='Offender Age', ax=ax)
    sns.histplot(df['Victim_Age'], bins=30, kde=True, color='orange', label='Victim Age', ax=ax)
    ax.set_xlabel('Age')
    ax.set_ylabel('Frequency')
    ax.legend()
    st.pyplot(fig)

    # Gender counts
    st.subheader("Offender and Victim Gender Distribution")
    fig, ax = plt.subplots(figsize=(8, 4))
    sns.countplot(data=df, x='Offender_Gender', palette='Set2', ax=ax)
    st.pyplot(fig)

    fig, ax = plt.subplots(figsize=(8, 4))
    sns.countplot(data=df, x='Victim_Gender', palette='Set3', ax=ax)
    st.pyplot(fig)

    # Race distribution comparison
    st.subheader("Offender and Victim Race Comparison")
    fig, ax = plt.subplots(figsize=(10, 6))
    df[['Offender_Race', 'Victim_Race']].melt(var_name='Type', value_name='Race').groupby(['Type', 'Race']).size().unstack().T.plot(kind='bar', stacked=True, ax=ax)
    ax.set_ylabel('Count')
    st.pyplot(fig)

    # Pie chart for Disposition
    st.subheader("Disposition Distribution")
    fig, ax = plt.subplots(figsize=(8, 8))
    disposition_counts = df['Disposition'].value_counts()
    disposition_counts.plot.pie(autopct='%1.1f%%', startangle=90, colors=sns.color_palette('pastel'), ax=ax)
    ax.set_ylabel('')
    st.pyplot(fig)

    # Pairplot for Age columns
    st.subheader("Pairplot: Offender Age vs Victim Age")
    pairplot_fig = sns.pairplot(df[['Offender_Age', 'Victim_Age']])
    st.pyplot(pairplot_fig)

    # Gender vs Disposition
    st.subheader("Offender Gender vs Disposition")
    fig, ax = plt.subplots(figsize=(10, 6))
    gender_disposition = pd.crosstab(df['Offender_Gender'], df['Disposition'])
    gender_disposition.plot(kind='bar', stacked=True, colormap='viridis', ax=ax)
    ax.set_ylabel('Count')
    st.pyplot(fig)

    # Offender Age vs Victim Age Scatter Plot
    st.subheader("Offender Age vs Victim Age")
    fig, ax = plt.subplots(figsize=(8, 6))
    sns.scatterplot(data=df, x='Offender_Age', y='Victim_Age', hue='Offender_Gender', palette='Set2', ax=ax)
    ax.set_xlabel('Offender Age')
    ax.set_ylabel('Victim Age')
    st.pyplot(fig)

else:
    st.warning("Please upload a CSV file to proceed.")